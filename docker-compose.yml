networks:
  avito-speculant-net:
    external: true

services:
  bot:
    image: ghcr.io/bitnoize/avito-speculant-bot:latest
    build:
      context: .
      dockerfile: ./apps/bot/Dockerfile
    environment:
      - UID=54210
      - GID=54210
      - NODE_ENV=${NODE_ENV}
      - LOG_LEVEL=${LOG_LEVEL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DATABASEL=${REDIS_DATABASE}
      - REDIS_USERNAME=${REDIS_USERNAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - BOT_TOKEN=${BOT_TOKEN}
    #command: ["npm", "-w", "@avito-speculant/bot", "run", "start"]
    networks:
      - avito-speculant-net
    depends_on:
      - connect-postgres
      - connect-redis
    restart: unless-stopped

  manager:
    image: ghcr.io/bitnoize/avito-speculant-manager:latest
    build:
      context: .
      dockerfile: ./apps/manager/Dockerfile
    environment:
      - UID=54220
      - GID=54220
      - NODE_ENV=${NODE_ENV}
      - LOG_LEVEL=${LOG_LEVEL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DATABASEL=${REDIS_DATABASE}
      - REDIS_USERNAME=${REDIS_USERNAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    #command: ["npm", "-w", "@avito-speculant/bot", "run", "start"]
    networks:
      - avito-speculant-net
    depends_on:
      - connect-postgres
      - connect-redis
    restart: no

  connect-postgres:
    image: alpine/socat
    networks:
      - avito-speculant-net
    restart: unless-stopped
    deploy:
      mode: global

  connect-redis:
    image: alpine/socat
    networks:
      - avito-speculant-net
    restart: unless-stopped
    deploy:
      mode: global

